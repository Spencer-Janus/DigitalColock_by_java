
import java.awt.Font;
import java.awt.Graphics;
import java.util.Calendar;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yzh
 */
public class NewJFrame1 extends javax.swing.JFrame implements Runnable{
    public Thread clockThread;
    public Graphics mg;//动态画出时间日期星期和闹钟开关
    public int hc;//闹钟小时
    public int mc;//闹钟分钟
    public int sc;//闹钟秒钟
    public int timerm;//倒计时分钟
    public int timers;//倒计时秒钟
    public int clockswitch=0;//闹钟开关  1为关闭0为打开
    public int c=0;//通过数字变化表示闹钟的状态，1为打开0为关闭
    public int h;//计算倒计时的时分秒
    public int m;
    public int s;
    public int n;//控制贪睡功能，0为10分钟响铃，1为取消
    public int sleepm;//贪睡后的时间
    public int sleeph;
    public int sleeps;
    public Audioclip a;//用来播放音乐

    /**
     * Creates new form NewJFrame1
     */
    public NewJFrame1() {
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        mg = this.getGraphics();
        clockThread = new Thread(this,"clock");
        clockThread.start();
    }
        public void run(){
        Thread myThread = Thread.currentThread();
        while(clockThread == myThread){
            repaint();
            try{
                Thread.sleep(1000);
            }
            catch(InterruptedException e){ }
        }
    }
        public void paint(Graphics mg){//画出所有信息
        super.paint(mg);
        mg = this.getGraphics();
        Calendar cal = Calendar.getInstance();
        int y = cal.get(Calendar.YEAR);
        int m = cal.get(Calendar.MONTH)+1;
        int d = cal.get(Calendar.DATE);
        int hh = cal.get(Calendar.HOUR_OF_DAY);
        int mm = cal.get(Calendar.MINUTE);
        int ss = cal.get(Calendar.SECOND);
        String clockStr = new String(hh + ":" + mm + ":" + ss);
        mg.setFont(new Font("DIALOG",Font.PLAIN,80));
        mg.drawString(clockStr,200,200);
        String clockStr2 = new String(y + "-" + m + "-" + d);
        mg.setFont(new Font("DIALOG",Font.PLAIN,35));
        mg.drawString(clockStr2,200,100);
        String clockStr3 = new String(getweek());
        mg.setFont(new Font("DIALOG",Font.PLAIN,35));
        mg.drawString(clockStr3,400,100);
        String clockStr4 = new String(clockstate());
        mg.setFont(new Font("DIALOG",Font.PLAIN,15));
        mg.drawString(clockStr4,200,350);
        switch(clockswitch){
            case 0:
                clock();
                break;
            case 1:
                break;
        }
        dialog();

        
               
          

        cal = null;
    }
        public String getweek(){//计算星期
        Calendar calendar = Calendar.getInstance();
        int weekDay = calendar.get(Calendar.DAY_OF_WEEK)-1 ;
        String[] WeekDays = {"星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"};
        if(weekDay<0){
            weekDay=0;
        }
        return WeekDays[weekDay];
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel2.setText("日期");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel3.setText("时间");

        jButton1.setText("设置闹钟");
        jButton1.setToolTipText("");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("关闭闹钟");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel1.setText("  闹钟状态：");

        jButton3.setText("倒计时");
        jButton3.setToolTipText("");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(642, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
//通过按钮设置闹钟
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        String inputvalue=JOptionPane.showInputDialog(this, "请输入小时") ;
        hc= Integer.parseInt( inputvalue );
        String inputvalue2=JOptionPane.showInputDialog(this, "请输入分钟") ;
        mc= Integer.parseInt( inputvalue2 );
        String inputvalue3=JOptionPane.showInputDialog(this, "请输入秒钟") ;
        sc=Integer.parseInt( inputvalue3 );
        clockswitch=0;//确认闹钟开关为打开，防止点击关闭之后不能再次打开
        c=1;
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked
//通过按钮关闭闹钟，并使得闹钟状态显示为关闭
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        clockswitch=1;
        c=0;
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
         Calendar cal = Calendar.getInstance();
        JOptionPane.showMessageDialog(this,"请先设置分钟，在设置秒钟","设置提醒", JOptionPane.INFORMATION_MESSAGE);
        String inputvalue4=JOptionPane.showInputDialog(this, "请输入分钟") ;
        timerm= Integer.parseInt( inputvalue4 );
        String inputvalue5=JOptionPane.showInputDialog(this, "请输入秒钟") ;
        timers=Integer.parseInt( inputvalue5 );
        timerdialog();

    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        NewJFrame1 ck = new NewJFrame1();
        ck.setVisible(true);
    }
    public void clock() {//响铃时弹出对话框
        Calendar cal = Calendar.getInstance();
        if(hc==cal.get(Calendar.HOUR_OF_DAY)&&mc==cal.get(Calendar.MINUTE)&&sc==cal.get(Calendar.SECOND)){
            a.playMusic();
            JOptionPane.showMessageDialog(this,"您的闹钟已响铃","闹钟", JOptionPane.INFORMATION_MESSAGE);
            a.StopMusic();
            n = JOptionPane.showConfirmDialog(this,"再睡十分钟?", "贪睡功能", JOptionPane.YES_NO_OPTION);
            ContinueSleep();
            
        } 
        else{
            return;
        }
        }
    public String clockstate(){//闹钟的状态
        if(c==1){
            return"打开";
        }
        else if(c==0){
            return"关闭";
        }
        return null;
    }

    public void timerdialog(){//计算倒计时的时间
        Calendar cal = Calendar.getInstance();
        h=cal.get(Calendar.HOUR_OF_DAY);
        s=cal.get(Calendar.SECOND)+timers;
        m=cal.get(Calendar.MINUTE)+timerm;
        if(s>=60){
            s=s-60;
            m=m+1;
        }
        if(m>=60){
            m=m-60;
            h++;
        }
        if(h>=24){
            h=h-24;
        }
        System.out.println("当前时间");
        System.out.println(h);
        System.out.println(m);    
        System.out.println(s);
        System.out.println("结束时间");        
        System.out.println(cal.get(Calendar.HOUR_OF_DAY));
        System.out.println(cal.get(Calendar.MINUTE));    
        System.out.println(cal.get(Calendar.SECOND));
        }
    public void dialog(){//倒计时弹出对话框
        Calendar cal = Calendar.getInstance();
         if(h==cal.get(Calendar.HOUR_OF_DAY)&&m==cal.get(Calendar.MINUTE)&&s==cal.get(Calendar.SECOND)){
            a.playMusic();
            JOptionPane.showMessageDialog(this,"倒计时结束","闹钟", JOptionPane.INFORMATION_MESSAGE);
            a.StopMusic();
        } 
        else{
            return;
        }       
   
    }
    public void ContinueSleep(){//贪睡，十分钟后再次响铃
        if(n==0){
                    c=1;
                    Calendar cal = Calendar.getInstance();
                    hc=cal.get(Calendar.HOUR_OF_DAY);
                    sc=cal.get(Calendar.SECOND);
                    mc=cal.get(Calendar.MINUTE)+1;
                     if(mc>=60){
                         mc=mc-60;
                           hc++;
                      }
                        if(hc>=24){
                         hc=hc-24;
                        }                  
        }
        else{
            c=0;
            return;
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}

